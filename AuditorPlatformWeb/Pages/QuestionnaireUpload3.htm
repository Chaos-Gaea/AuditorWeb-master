<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>渠道核查在线管理平台</title>
<link rel="shortcut icon" href="favicon.ico"/>
  <meta name="renderer" content="webkit" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black" /> 
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="format-detection" content="telephone=no" />  

<meta http-equiv="Expires" content="0" />
<meta http-equiv="Pragma" content="no-cache" />
<meta http-equiv="Cache-control" content="no-cache" />
<meta http-equiv="Cache" content="no-cache" />

  <link rel="stylesheet" href="css/layui.css"  media="all" />
  <link rel="stylesheet" href="css/common.css"  media="all" />
  <script type="text/javascript" src="js/jquery_2-1-0_min.js"  charset="utf-8"></script>
  <script src="js/jquery.base64.js" type="text/javascript"></script>
  <script src="js/lay-new/layui.js"></script>
  <script src="js/Common.js" type="text/javascript"></script>

  <link rel="stylesheet" type="text/css" href="webuploader/webuploader.css" />
  <script type="text/javascript" src="webuploader/webuploader.js"></script>

  <script type="text/javascript" src="js/video.min.js"></script>	
  <script src="js/videojs.hotkeys.min.js" type="text/javascript"></script>
  <script src="js/draggabilly.pkgd.min.js" type="text/javascript"></script>

  <script src="js/audio.min.js" type="text/javascript"></script>

   <link href="Viewer/viewer.min.css" rel="stylesheet" type="text/css" />
   <script src="Viewer/viewer.min.js" type="text/javascript"></script>

  <style type="text/css">
    .customcheckbox
    {
        width:16px;
        height:16px; 
        margin-bottom:-2px; 
        margin-right:5px;
        cursor:pointer;
    }
    .copylabel
    {
        cursor: text;
    }
    .minitextarea
    {
        min-height:60px;
    }
    .customtextinput
    {
        height: 30px;
        line-height: 30px;
        }
  </style>
  <script type="text/javascript" language="javascript" charset="utf-8">

      layui.use(["element", "form"], function () {
          var element = layui.element;
          var form = layui.form;
      });

      layui.use('laydate', function () {
          var laydate = layui.laydate;

          //日期选择器
          laydate.render({
              elem: '#txtVisitDate'
               , done: function (value, date) {
                   var jsdate = new Date(value);
                   var weekNum = jsdate.getDay();
                   $("#ddlWeekNumList").find("input[id=WeekNum_" + weekNum + "]").prop("checked", true);
               }
                , ready: function () {
                    $("#txtVisitDate").on("change", function () {
                        var value = $("#txtVisitDate").val();
                        var jsdate = new Date(value);
                        var weekNum = jsdate.getDay();
                        $("#ddlWeekNumList").find("input[id=WeekNum_" + weekNum + "]").prop("checked", true);
                    });
                }
          });

          //时间选择器
          laydate.render({
              elem: '#txtVisitBeginTime'
              , type: 'time'
              , format: 'HH:mm'
              , done: function (value, time) {
                  BindTimeStartEvent(value);
              }
              , ready: function () {
                  $("#txtVisitBeginTime").on("change", function () {
                      BindTimeStartEvent();
                  });
              }
          });
          laydate.render({
              elem: '#txtVisitEndTime'
              , type: 'time'
              , format: 'HH:mm'
              , done: function (value, time) {
                  RefreshTimeLength(null, value);
              }
              , ready: function () {
                  $("#txtVisitEndTime").on("change", function () { RefreshTimeLength(null, null); });
              }
          });

      });

      function BindTimeStartEvent(value) {
          var timevalue = $("#txtVisitBeginTime").val();
          if (value) {
              timevalue = value;
          }
          var seconds = GetTimeMinutes(timevalue) * 60;
          $("#ddlTimePeriodList").find("input").each(function (i, item) {
              var timeValue = $(item).val();
              var timeStart = timeValue.split('-')[0];
              var timeEnd = timeValue.split('-')[1];
              timeStart = parseInt(timeStart);
              timeEnd = parseInt(timeEnd);
              if (seconds >= timeStart && seconds < timeEnd) {
                  //命中该选项
                  $(item).prop("checked", true);
                  return false;
              }
              else {
                  $(item).prop("checked", false);
              }
          });
          RefreshTimeLength(value, null);
      }

      function RefreshTimeLength(startValue, endValue) {
          var timestart = $("#txtVisitBeginTime").val();
          if (startValue != null) {
              timestart = startValue;
          }
          var timeend = $("#txtVisitEndTime").val();
          if (endValue != null) {
              timeend = endValue;
          }
          timestart = GetTimeMinutes(timestart);
          timeend = GetTimeMinutes(timeend);
          if (timestart > 0 && timeend > 0) {
              $("#txtTimeLength").val(timeend - timestart);
          }
      }

      function GetTimeMinutes(timeValue) {
          if (timeValue.indexOf(':') < 0) {
              return 0;
          }
          var hours = timeValue.split(':')[0];
          var minutes = timeValue.split(':')[1];
          hours = parseInt(hours);
          minutes = parseInt(minutes);
          return hours * 60 + minutes;
      }


      $(function () {
          $.ajaxSettings.async = false;

          var resultID = getUrlParam("resultID");
          resultID = decodeBase64(resultID, 5);
          $("#hfResultID").val(resultID);
          var auditType = getUrlParam("auditType");
          auditType = decodeBase64(auditType, 5);
          $("#hfAuditType").val(auditType);

          $("#btnSubmitUpload").click(function () {
              DoSaveInfo();
          });
          if (auditType != "") {
              LoadAuditHistory();
              $("#divAuditInfo").show();
          }
          if (resultID != "" && resultID != "-1" && auditType != "" && auditType != "-1") {
              //审核
              var st = getUrlParam("st");
              $("#hfStatus").val(st);

              InitResultInfo(resultID);
              LoadAuditStatus();
              LoadCurrentProject();
              InitReturnUserType();

              $("#btnSubmitAudit").click(function () {
                  ShowAuditWindow();
              });
          }
          else {
              //录入
              var deliveryID = getUrlParam("deliveryID");
              deliveryID = decodeBase64(deliveryID, 5);
              $("#hfDeliveryID").val(deliveryID);
              var clientID = getUrlParam("clientID");
              clientID = decodeBase64(clientID, 5);
              $("#hfClientID").val(clientID);
              var questionnaireID = getUrlParam("questionnaireID");
              questionnaireID = decodeBase64(questionnaireID, 5);
              $("#hfQuestionnaireID").val(questionnaireID);
              $("#btnSubmitAudit").click(function () {
                  $("#loadAudit").show();
                  DoSubmitUpload();
              });

              if (resultID == "" || resultID == "-1") {
                  GetUnfinishUploadResultID();
                  resultID = $("#hfResultID").val();
              }
          }

          if (resultID != "" && resultID != "-1" && (userType == 5 || userType == 7)) {
              //5 质控督导，7 研究员
              $("#btnDelete").show();
              $("#btnDelete").click(function () {
                  layer.confirm("提示：您确定要删除该问卷吗？删除后将无法恢复数据，请谨慎操作。", function () {
                      layer.closeAll();
                      DeleteResult(resultID);
                  });
              });
          }
          else {
              $("#btnDelete").hide();
          }

          InitTimePeriodList();

          InitClientInfo();
          InitDeliveryInfo();
          InitQuestions();

          $("#btnClose").click(function () {
              DoClose();
          });

          $("#btnCancelAudit").click(function () {
              layer.closeAll();
          });


          $("#btnAudit").click(function () {
              DoSubmitAudit();
          });

          if (resultID != "" && resultID != "-1") {
              LoadAnswers();
          }

          layui.use('form', function () {
              var form = layui.form;
              form.on('radio(cbxApprove)', function (data) {
                  AuditUpdateOnCheck(form);
              });
              form.on('radio(cbxReject)', function (data) {
                  AuditUpdateOnCheck(form);
              });
          });

          LoadUploadControl();

          if (userType == 5) {
              //质控督导用户
              $("#btnSubmitUpload").show();
          }

          /*银联项目临时特殊处理*/
          if (userID == 463748) {
              //              $("#btnSubmitUpload").hide();
              //              $("#btnSubmitAudit").hide();
              //              $("#btnAudit").hide();
              $("#btnDelete").hide();
              $("#filePicker").hide();
          }

          $.ajaxSettings.async = true;

      });

      function DeleteResult(resultID) {
          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 23,
                  Date: date,
                  resultID: resultID
              },
              dataType: "json",
              type: "POST",
              traditional: true,
              success: function (data) {
                  layer.alert("删除成功，即将关闭页面。", function () {
                      layer.closeAll();
                      DoClose();
                  });
              },
              error: function (e) {

              }
          });
      }

      function GetUnfinishUploadResultID() {
          var deliveryID = $("#hfDeliveryID").val();
          var clientID = $("#hfClientID").val();
          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 22,
                  Date: date,
                  deliveryID: deliveryID,
                  clientID: clientID
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  var resultID = data;
                  if (resultID > 0) {
                      $("#hfResultID").val(resultID);
                  }
              },
              error: function (e) {

              }
          });
      }

      function btnCancelAppeal() {
          layer.closeAll();
      }

      function ShowAuditHistory() {
          layer.open({
              type: 1,
              title: "所有审核信息",
              area: ["800px", "300px"],
              content: $('#auditNoteHistory')
          });
      }

      function LoadAuditHistory() {
          $("#auditInfo").show();
          $("#auditHistory").empty();
          var resultID = $("#hfResultID").val();
          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 13,
                  Date: date,
                  resultID: resultID
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  $.each(data, function (i, item) {
                      var str = "<tr>";
                      str += "<td>" + item.UserName + "</td>";
                      str += "<td>" + item.Result + "</td>";
                      str += "<td>" + item.AuditNotes + "</td>";
                      str += "<td>" + jsonDateTimeFormatWithoutSeconds(item.AuditTime) + "</td>";
                      str += "</tr>";
                      $("#auditHistory").append(str);
                  });

                  var len = JSONLength(data);
                  if (len > 0) {
                      var firstItem = data[len - 1];
                      var firstText = firstItem.UserName + "&nbsp;&nbsp;";
                      firstText += jsonDateTimeFormatWithoutSeconds(firstItem.AuditTime) + "：";
                      firstText += firstItem.Result;
                      firstText += "，批注:" + firstItem.AuditNotes;
                      $("#lblAuditNote").html(firstText);
                  }
              },
              error: function (e) {

              }
          });
      }


      function LoadCurrentProject() {
          var date = new Date();
          var url = '../Logic/Project.ashx';
          $.ajax({
              type: "get",
              url: url,
              data: { "type": "11", "date": date },
              success: function (data) {
                  if (data != null) {
                      $("#hfBHasAreaUser").val(data.BHasAreaUser);
                  }
              }
          });
      }

      function InitReturnUserType() {
          var auditType = $("#hfAuditType").val();
          if (auditType == "6") {
              //质控督导审核
              if (userType == 7) {
                  $("#ddlReturnUserType").append("<option value=\"5\">退回质控督导</option>");
              }
              $("#ddlReturnUserType").append("<option value=\"6\">退回质控员</option>");
              if ($("#hfBHasAreaUser").val() == "true") {
                  $("#ddlReturnUserType").append("<option value=\"2\">退回区控</option>");
              }
              $("#ddlReturnUserType").append("<option value=\"3\">退回执行督导</option>");
              $("#ddlReturnUserType").append("<option value=\"4\">退回访问员</option>");
          }
          else if (auditType == "3") {
              //质控审核
              if ($("#hfBHasAreaUser").val() == "true") {
                  $("#ddlReturnUserType").append("<option value=\"2\">退回区控</option>");
              }
              $("#ddlReturnUserType").append("<option value=\"3\">退回执行督导</option>");
              $("#ddlReturnUserType").append("<option value=\"4\">退回访问员</option>");
          }
          else if (auditType == "2") {
              //区控审核
              $("#ddlReturnUserType").append("<option value=\"3\">退回执行督导</option>");
              $("#ddlReturnUserType").append("<option value=\"4\">退回访问员</option>");
          }
          else if (auditType == "1") {
              //执行督导审核
              $("#ddlReturnUserType").append("<option value=\"4\">退回访问员</option>");
          }
      }

      function LoadAuditStatus() {
          var typeID = $("#hfAuditType").val();
          var resultID = $("#hfResultID").val();
          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 3,
                  Date: date,
                  resultID: resultID,
                  typeID: typeID
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  var status = data.Status;
                  //未审核 = 0,
                  //通过 = 1,
                  //不通过 = 2
                  if (status == 2 && typeID == "1") {
                      $("#btnSubmitAudit").show();
                      $("#hfStatus").val("1");
                      $("#btnSubmitUpload").show();
                  }
                  else if (status == 3 && typeID == "2") {
                      $("#btnSubmitAudit").show();
                      $("#hfStatus").val("1");
                      $("#btnSubmitUpload").show();
                  }
                  else if (status == 4 && typeID == "3") {
                      $("#btnSubmitAudit").show();
                      $("#hfStatus").val("1");
                      $("#btnSubmitUpload").show();
                  }
                  else if (status == 5 && typeID == "4") {
                      $("#btnSubmitAudit").show();
                      $("#hfStatus").val("1");
                      $("#btnSubmitUpload").show();
                  }
                  else if (status == 8 && typeID == "6") {
                      if (data.AuditStatus == 0 || userType == 7) {
                          $("#btnSubmitUpload").show();
                          $("#btnSubmitAudit").show();
                          $("#hfStatus").val("1");
                      } else {
                          $("#btnSubmitAudit").hide();
                          $("#hfStatus").val("0");
                      }
                  }
                  else if (status == 6) {
                      //复审中
                      $("#btnSubmitUpload").hide();
                      $("#btnSubmitAudit").hide();
                      $("#hfStatus").val("1");
                  }
                  else if (status == 7 && (userType == 7 || userType == 5)) {
                      //已完成状态，质控督导和研究员可以修改指标答案
                      $("#btnSubmitAudit").hide();
                      $("#btnSubmitUpload").show();
                      $("#hfStatus").val("1");
                  }
                  else {
                      $("#btnSubmitAudit").hide();
                      $("#btnSubmitUpload").hide();
                      $("#hfStatus").val("0");
                  }

                  if (userType == 10) {
                      $("#btnSubmitAudit").hide();
                      $("#btnSubmitUpload").hide();
                      $("#hfStatus").val("0");
                  }
                  $("#lblStatusName").text(data.Info);
              },
              error: function (e) {

              }
          });
      }

      function AuditUpdateOnCheck(form) {
          var approved = $("#cbxApprove").prop("checked");
          if (approved == true) {
              $("#returnUser").hide();
          }
          else {
              $("#ddlReturnUserType").val("");
              $("#returnUser").show();
          }
          form.render("select");
      }

      function DoSubmitAudit() {
          var approved = $("#cbxApprove").prop("checked");
          if (approved == true) {
              var msg = [];
              $("#questionlist").find("tr").each(function (i, item) {
                  var questionID = $(item).attr("id");
                  if (questionID == undefined || questionID == "") {
                      return true;
                  }
                  //隐藏题目不需要验证
                  if ($(item).is(":hidden")) {
                      return true;
                  }
                  var questionType = $(item).find("input[name='hfQuestionType']").val();
                  var questionTitle = $(item).find("input[name='hfQuestionTitle']").val();
                  if (questionType == "4") {
                      var text = $(item).find("textarea").val();
                      if (text == "") {
                          msg.push(questionTitle + "(未作答)");
                      }
                  }
                  else if (questionType != "7" && questionType != "8") {
                      var ticked = $(item).find(":checked").length;
                      if (ticked <= 0) {
                          msg.push(questionTitle + "(未作答)");
                      }
                      else {
                          $(item).find("input[name='otherAnswer']").each(function (m, otherItem) {
                              if ($(otherItem).prop("disabled") == false) {
                                  if ($(otherItem).val() == "") {
                                      msg.push(questionTitle + "(未补充说明选中选项)");
                                      return false;
                                  }
                              }
                          });
                          var fullScore = $(item).find("input[name='txtFullScore']").val();
                          var positiveScore = $(item).find("input[name='txtPositiveScore']").val();
                          var negativeScore = $(item).find("input[name='txtNegativeScore']").val();
                          var description = $(item).find("textarea[name='txtQuestionDescription']").val();
                          if (fullScore != positiveScore && negativeScore != positiveScore && description == "") {
                              msg.push(questionTitle + "(未填写扣分描述)");
                          }
                      }
                  }
              });

              if (msg.length > 0) {
                  var message = "您有以下未完成项，无法提交问卷<br/>";
                  $.each(msg, function (n, value) {
                      message += ("(" + (n + 1) + ")" + " " + value);
                      message += "<br/>";
                  });
                  layer.alert(message);
                  return false;
//                  layer.confirm(message, { btn: ['确定', '取消'] }, function (index) {
//                      layer.close(index);
//                      DoSubmitAuditInstance();
//                  });
              }
              else {
                  DoSubmitAuditInstance();
              }
          }
          else {
              DoSubmitAuditInstance();
          }
      }

      function DoSubmitAuditInstance() {
          var approved = $("#cbxApprove").prop("checked");
          $("#btnAudit").attr("disabled", true);
          var auditNotes = $("#txtAuditNote").val();
          var returnUserType = $("#ddlReturnUserType").val();
          if (approved == false && returnUserType == "") {
              layer.alert("提交失败，审核不通过的情况下需要您选择退回的用户。");
              $("#btnAudit").attr("disabled", false);
              return false;
          }

          $.ajaxSettings.async = false;

          DoSaveInfo();

          var typeID = $("#hfAuditType").val();
          var resultID = $("#hfResultID").val();

          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 2,
                  Date: date,
                  resultID: resultID,
                  approved: approved,
                  auditNotes: auditNotes,
                  returnUserType: returnUserType,
                  typeID: typeID
              },
              dataType: "json",
              type: "POST",
              traditional: true,
              success: function (data) {
                  if (data == "-1") {
                      layer.alert("提交失败，系统检测到您正在处理的问卷不属于当前登录项目。<br/><br/><b>请重新登录后再处理<b/>", function (index) {
                          layer.closeAll();
                          QuitSystemInstance();
                      });
                  }
                  else {
                      layer.alert("提交成功.", function (index) {
                          layer.closeAll();
                          DoClose();
                      });
                  }
                  $("#btnAudit").attr("disabled", false);
              },
              error: function (e) {
                  $("#btnAudit").attr("disabled", false);
              }
          });

          $.ajaxSettings.async = true;
      }

      function LoadAnswers() {
          LoadInfo();
          LoadQuestionAnswers();
      }

      function LoadQuestionAnswers() {
          var resultID = $("#hfResultID").val();
          var url = "../Logic/QuestionAnswer.ashx";
            var date = new Date();
            $.ajax({
                url: url,
                data: {
                    type: 14,
                    Date: date,
                    resultID: resultID
                },
                dataType: "json",
                type: "GET",
                traditional: true,
                success: function (data) {
                    $.each(data, function (i, answerRow) {
                        var answerDO = answerRow.Answer;
                        var answerOptions = answerRow.AnswerOptions;

                        var answerID = answerDO.ID;
                        var questionID = answerDO.QuestionID;

                        var item = "#question_" + questionID;
                        var questionType = $(item).find("input[name='hfQuestionType']").val();

                        if (questionType == 4) {
                            var onlyOption = answerOptions[0];
                            $(item).find("textarea[name='inputAnswer']").val(onlyOption.OptionText);
                        }
                        else if (questionType == 8) {
                            //上传题，加载图片
                            var filelistID = "filelist_" + questionID;
                            var tempCode = resultID * 100 + " " + questionID * 100;
                            LoadImages(3, answerID, tempCode, document.getElementById(filelistID));
                        }
                        else {
                            $.each(answerOptions, function (i, option) {
                                var optionID = option.OptionID;
                                var optionText = option.OptionText;
                                var inputControlName = "Answer_" + optionID;
                                //$(item).find("input[name='" + inputControlName + "']").prop("checked", true).change();
                                $(item).find("input[name='" + inputControlName + "']").prop("checked", true);
                                var optionObj = $(item).find("input[name='" + inputControlName + "']").get(0);
                                if (optionObj) {
                                    SelectedOptionChanged(questionID, optionObj);
                                }
                                $(optionObj).closest(".optionOne").find("input[type='text']").val(optionText);
                            });
                            var fullScore = $(item).find("input[name='txtFullScore']").val();
                            fullScore = parseFloat(fullScore);
                            if (fullScore != answerDO.TotalScore) {
                                $(item).addClass("highlightrow");
                            }
                        }
                        $(item).find("textarea[name='txtQuestionDescription']").val(answerDO.Description);

                    });

                }
            });

            //加载审核信息
            var url = "../Logic/QuestionnaireAudit.ashx";
            var date = new Date();
            $.ajax({
                url: url,
                data: {
                    type: 25,
                    Date: date,
                    resultID: resultID
                },
                dataType: "json",
                type: "GET",
                traditional: true,
                success: function (data) {
                    $.each(data, function (k, aItem) {
                        var questionID = aItem.QuestionID;
                        var item = "#question_" + questionID;
                        var auditNote = ("[" + aItem.Name + "]:" + aItem.AuditNotes + " " + jsonDateTimeFormat(aItem.CreateTime));
                        auditNote = auditNote + "</br>";
                        $(item).find("td[name='auditTag']").append(auditNote);
                    });
                }
            });

      }

      function LoadImages(typeID, relatedID, tempCode, urlObj) {
          var geturl = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: geturl,
              data: {
                  type: 5,
                  Date: date,
                  relatedID: relatedID,
                  typeID: typeID,
                  tempCode: tempCode
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  var str = "";
                  if (data != null && data.length > 0) {
                      $.each(data, function (i, item) {
                          var pictitle = item.FileName;
                          var url = item.RelevantPath;
                          var thumbUrl = item.ThumbRelevantPath;
                          var fileType = item.FileType;
                          if (thumbUrl == null || thumbUrl == "") {
                              thumbUrl = url;
                          }

                          if (fileType == 1) {
                              //图片
                              str += "<li><img data-original=\"" + url + "\" src=\"" + thumbUrl + "\" alt='" + pictitle + "'/></li>";
                          }
                      });
                      $(urlObj).append(str);
                      var viewer_page = new Viewer(urlObj, {
                          url: 'data-original',
                          viewed: function () {
                              $(".viewer-container").unbind("click");
                              $(".viewer-container").bind("click", function (evt) {
                                  var e = evt || window.event;
                                  var curobj = e.srcElement ? e.srcElement : e.target;
                                  if (curobj.tagName == "IMG" || curobj.tagName == "LI") {
                                      return;
                                  }
                                  viewer_page.hide();
                              });
                          }
                      });
                  }
              },
              error: function (e) {

              }
          });
      }

      function InitResultInfo(resultID) {
          var date = new Date();
          var url = '../Logic/QuestionnaireAudit.ashx';
          $.getJSON(url, { type: "19", date: date, resultID: resultID }, function (data) {
              var resultDO = data;
              $("#hfDeliveryID").val(resultDO.DeliveryID);
              $("#hfClientID").val(resultDO.ClientID);
              $("#hfQuestionnaireID").val(resultDO.QuestionnaireID);
          });
      }

      function DoSaveInfo() {
          $("#loadAnswer").show();
          $("#btnSubmitUpload").prop("disabled", true);

          var resultID = $("#hfResultID").val();
          var deliveryID = $("#hfDeliveryID").val();
          var clientID = $("#hfClientID").val();
          var questionnaireID = $("#hfQuestionnaireID").val();

          var visitDate = $("#txtVisitDate").val();
          var visitBeginTime = $("#txtVisitBeginTime").val();
          var visitEndTime = $("#txtVisitEndTime").val();
          var videoPath = $("#txtVideoPath").val();
          var videoLength = $("#txtVideoLength").val();
          var description = $("#txtDescription").val();

          var timeLength = $("#txtTimeLength").val();
          var timePeriod = $("#ddlTimePeriodList").find("input:checked").attr("id");
          if (timePeriod == undefined) {
              timePeriod = "";
          }
          timePeriod = timePeriod.replace("time_", "");
          var weekNum = $("#ddlWeekNumList").find("input:checked").val();

          var msg = [];
          if (visitDate == "") {
              msg.push("请输入访问日期.");
          }
          if (visitBeginTime == "") {
              msg.push("请输入访问开始时间.");
          }
          if (visitEndTime == "") {
              msg.push("请输入访问结束时间.");
          }
          if (timeLength == "") {
              msg.push("请输入访问时长.");
          }
          $("#questionlist").find("tr").each(function (i, item) {
              var questionID = $(item).attr("id");
              if (questionID == undefined || questionID == "") {
                  return true;
              }
              //隐藏题目不需要验证
              if ($(item).is(":hidden")) {
                  return true;
              }
              var questionType = $(item).find("input[name='hfQuestionType']").val();
              var questionTitle = $(item).find("input[name='hfQuestionTitle']").val();
              if (questionType == "4") {
                  var text = $(item).find("textarea").val();
                  if (text == "") {
                      msg.push(questionTitle + "(未作答)");
                  }
              }
              else if (questionType != "7" && questionType != "8") {
                  var ticked = $(item).find(":checked").length;
                  if (ticked <= 0) {
                      msg.push(questionTitle + "(未作答)");
                  }
                  else {
                      $(item).find("input[name='otherAnswer']").each(function (m, otherItem) {
                          if ($(otherItem).prop("disabled") == false) {
                              if ($(otherItem).val() == "") {
                                  msg.push(questionTitle + "(未补充说明选中选项)");
                                  return false;
                              }
                          }
                      });

                      var fullScore = $(item).find("input[name='txtFullScore']").val();
                      var positiveScore = $(item).find("input[name='txtPositiveScore']").val();
                      var negativeScore = $(item).find("input[name='txtNegativeScore']").val();
                      var description = $(item).find("textarea[name='txtQuestionDescription']").val();
                      if (fullScore != positiveScore && negativeScore != positiveScore && description == "") {
                          msg.push(questionTitle + "(未填写扣分描述)");
                      }
                  }
              }
          });

          if (msg.length > 0) {
              var message = "您有以下未完成项，请务必完成后再提交：<br/>";
              $.each(msg, function (n, value) {
                  message += ("(" + (n + 1) + ")" + " " + value);
                  message += "<br/>";
              });

              $("#loadAnswer").hide();
              $("#btnSubmitUpload").prop("disabled", false);

              layer.alert(message);
              return false;
          }

          var jsonAnwsers = [];
          var jsonDeleteAnswers = [];
          $("#questionlist").find("tr").each(function (i, item) {
              var questionID = $(item).attr("id");
              if (questionID == undefined || questionID == "") {
                  return true;
              }
              var qdo = {};
              qdo.QuestionID = questionID.replace("question_", "");
              var questionType = $(item).find("input[name='hfQuestionType']").val();
              qdo.QuestionType = questionType;
              var description = $(item).find("textarea[name='txtQuestionDescription']").val();
              qdo.Description = description;
              var score = $(item).find("input[name='txtPositiveScore']").val();
              qdo.Score = score;
              //隐藏题目需要清除答案
              if ($(item).is(":hidden")) {
                  if (questionType != "8") {
                      jsonDeleteAnswers.push(qdo);
                  }
                  return true;
              }
              var selectOptions = [];
              if (questionType == "4") {
                  var text = $(item).find("textarea[name='inputAnswer']").val();
                  selectOptions.push({ OptionID: -1, AdditionalText: text });
              }
              else if (questionType == "8") {
                  //leave
              }
              else if (questionType != "7") {
                  $(item).find(".questionOne").find("input").each(function () {
                      if ($(this).prop("checked") == true) {
                          var selectOptionID = $(this).val();
                          var additionalText = $(this).closest(".optionOne").find("input[type='text']").val();
                          if (additionalText == undefined) {
                              additionalText = "";
                          }
                          selectOptions.push({ OptionID: selectOptionID, AdditionalText: additionalText });
                      }
                  });
              }
              qdo.Options = selectOptions;
              jsonAnwsers.push(qdo);
          });
          var strJson = JSON.stringify(jsonAnwsers);
          var strJsonDelete = JSON.stringify(jsonDeleteAnswers);

          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 21,
                  Date: date,
                  resultID: resultID,
                  deliveryID: deliveryID,
                  clientID: clientID,
                  questionnaireID: questionnaireID,
                  visitDate: visitDate,
                  visitBeginTime: visitBeginTime,
                  visitEndTime: visitEndTime,
                  videoPath: videoPath,
                  videoLength: videoLength,
                  description: description,
                  timeLength: timeLength,
                  timePeriod: timePeriod,
                  weekNum: weekNum,
                  strJsonAnswers: strJson,
                  strJsonDeleteAnswers: strJsonDelete
              },
              dataType: "json",
              type: "POST",
              traditional: true,
              success: function (data) {
                  if (data == "-1") {
                      layer.alert("提交失败，系统检测到您正在处理的问卷不属于当前登录项目。<br/><br/><b>请重新登录后再处理<b/>", function (index) {
                          layer.closeAll();
                          QuitSystemInstance();
                      });
                  }
                  resultID = data;
                  $("#hfResultID").val(resultID);
                  layer.alert("保存成功。", function (index) {
                      layer.closeAll();
                      $("#loadAnswer").hide();
                      $("#btnSubmitUpload").prop("disabled", false);
                  });
              },
              error: function (e) {
              }
          });
      }

      function SaveQuestionAnswers() {
          var jsonAnwsers = [];
          $("#questionlist").find("tr").each(function (i, item) {
              var questionID = $(item).attr("id");
              if (questionID == undefined || questionID == "") {
                  return true;
              }
              var qdo = {};
              qdo.QuestionID = questionID.replace("question_", "");
              var questionType = $(item).find("input[name='hfQuestionType']").val();
              qdo.QuestionType = questionType;
              var description = $(item).find("textarea[name='txtQuestionDescription']").val();
              qdo.Description = description;
              var score = $(item).find("input[name='txtPositiveScore']").val();
              qdo.Score = score;
              var selectOptions = [];
              if (questionType == "4") {
                  var text = $(item).find("textarea[name='inputAnswer']").val();
                  selectOptions.push({ OptionID: -1, AdditionalText: text });
              }
              else if (questionType != "7") {
                  $(item).find(".questionOne").find("input").each(function () {
                      if ($(this).prop("checked") == true) {
                          var selectOptionID = $(this).val();
                          var additionalText = $(this).closest(".optionOne").find("input[type='text']").val();
                          if (additionalText == undefined) {
                              additionalText = "";
                          }
                          selectOptions.push({ OptionID: selectOptionID, AdditionalText: additionalText });
                      }
                  });
              }
              qdo.Options = selectOptions;
              jsonAnwsers.push(qdo);
          });
          var strJson = JSON.stringify(jsonAnwsers);
          var resultID = $("#hfResultID").val();
          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 18,
                  Date: date,
                  resultID: resultID,
                  jsonAnwsers: strJson
              },
              dataType: "json",
              type: "POST",
              traditional: true,
              success: function (data) {
                  layer.alert("保存成功。", function (index) {
                      layer.closeAll();
                      $("#loadAnswer").hide();
                      $("#btnSubmitUpload").prop("disabled", false);

                      var deliveryID = $("#hfDeliveryID").val();
                      var clientID = $("#hfClientID").val();
                      var questionnaireID = $("#hfQuestionnaireID").val();
                      var auditType = $("#hfAuditType").val();

                      var stateObject = {};

                      var url = "QuestionnaireUpload3.htm?questionnaireID=" + encodeBase64(questionnaireID, 5) + "&deliveryID=" + encodeBase64(deliveryID, 5) + "&clientID=" + encodeBase64(clientID, 5) + "&resultID=" + encodeBase64(resultID, 5) + "&auditType=" + encodeBase64(auditType, 5) + "&ts=" + (new Date()).toUTCString();
                      history.pushState({}, "", url);
                  });
              },
              error: function (e) {
              }
          });

      }

      function InitTimePeriodList() {
          $("#ddlTimePeriodList").empty();
          var date = new Date();
          var url = '../Logic/Project.ashx';
          $.getJSON(url, { type: "19", date: date }, function (data) {
              $.each(data, function (i, item) {
                  var period = ConvertJsonTimeToSeconds(item.TimeStart) + "-" + ConvertJsonTimeToSeconds(item.TimeEnd);
                  var title = item.Title;
                  var periodID = "time_" + period;
                  $("#ddlTimePeriodList").append("<li><input type=\"radio\" name=\"tiemperiod\" value=\"" + period + "\" id=\"time_" + item.ID + "\" class=\"customcheckbox\"><label for=\"" + periodID + "\">" + title + "</label></li>");
              });
          });
      }

      function InitClientInfo() {
          var clientID = $("#hfClientID").val();
          var date = new Date();
          var url = '../Logic/Clients.ashx';
          $.getJSON(url, { type: "6", date: date, id: clientID }, function (data) {
              var pdo = data;
              if (pdo != null) {
                  $("#txtClientCode").val(pdo.Code);
                  $("#txtClientName").val(pdo.Name);
                  $("#txtClientAddress").val(pdo.Address);
                  var parentID = pdo.ParentID;

                  date = new Date();
                  $.getJSON(url, { type: "6", date: date, id: parentID }, function (data) {
                      var parentDO = data;
                      if (parentDO != null) {
                          $("#txtParentClientName").val(parentDO.Name);
                      }
                  });
              }
          });
      }

      function InitDeliveryInfo() {
          var clientID = $("#hfClientID").val();
          var deliveryID = $("#hfDeliveryID").val();
          var date = new Date();
          var url = '../Logic/QuestionnaireDelivery.ashx';
          $.getJSON(url, { type: "8", date: date, deliveryID: deliveryID, clientID: clientID }, function (data) {
              var pdo = data[0];
              if (pdo != null) {
                  $("#txtVisitUserName").val(pdo.UserName);
                  $("#lblQuestionnaireName").text(pdo.QuestionnaireName);
                  $("#lblPeriod").text(pdo.Period);
                  $("#lblFullScore").text(pdo.TotalScore);
                  $("#lblScore").text(pdo.TotalScore);
              }
          });
      }

      function InitQuestions() {
          LoadQuestion();
      }

      function InitVideo(vPath, vCover) {
          var myPlayer = videojs('my-video', {}, function () {
              this.src(vPath);
              this.load(vPath);
              if (vCover == null || vCover == "") {
                  this.poster('images/videoCover.jpg');
              }
              else {
                  this.poster(vCover);
              }
          });
          videojs("my-video").ready(function () {
              var myPlayer = this;
          });
      }

      function InitAudio(aPath) {
          var audio = document.getElementById("my-audio");
          audio.src = aPath;
          audiojs.events.ready(function () {
              var as = audiojs.createAll();
          });
      }

      function ShowVideoWindow() {
          //边缘弹出
          layer.open({
              type: 1
              , title: '全程录像'
              , offset: 'lb' //具体配置参考：offset参数项
              , content: $('#floatDiv')
              , area: ['600px', '400px']
              , shade: 0 //不显示遮罩
          });
      }

      function ShowAudioWindow() {
          //边缘弹出
          layer.open({
              type: 1
              , title: '全程录音'
              , offset: 'lb' //具体配置参考：offset参数项
              , content: $('#floatAudio')
              , area: ['500px', '100px']
              , shade: 0 //不显示遮罩
              , success: function () {
                  audiojs.instances.audiojs0.play();
              }
          });
      }

      function LoadUploadControl() {
          var resultID = $("#hfResultID").val();
          var uploader = WebUploader.create({
              auto: true,
              swf: 'webuploader/Uploader.swf',
              server: '../Logic/Upload.ashx?type=18&resultID=' + resultID,
              pick: '#filePicker',
              timeout: 0,
              accept: {
                  title: '录音或者录像文件',
                  extensions: 'mp3,wav,wma,ogg,acc,aac,ape,mp4,avi,mpg,mpeg,mov,wmv,rm,rmvb,mkv,3gp,asf,flv,swf ',
                  mimeTypes: 'audio/*,video/*'
              }
          });

          // 当有文件被添加进队列的时候
          uploader.on('fileQueued', function (file) {
              $("#loadProgress").show();
          });

          // 文件上传过程中创建进度条实时显示。
          uploader.on('uploadProgress', function (file, percentage) {
              var percentText = "正在传输文件中 " + (percentage * 100).toFixed(0) + '%';
              if (percentage == 1) {
                  percentText = "已传输 100%，正在处理中";
              }
              $("#txtUploadProgress").text(percentText);
          });

          uploader.on('uploadSuccess', function (file, data) {
              var docID = parseInt(data);
              if (docID > 0) {
                  layer.alert("上传成功");
                  LoadVideoInfo();
              }
              else {
                  layer.alert("文件处理过程中出错");
              }
          });

          uploader.on('uploadError', function (file, reason) {
              layer.alert("上传出错,原因如下：<br/>" + reason);
          });

          uploader.on('uploadComplete', function (file) {
              $("#loadProgress").hide();
              uploader.reset();
          });
      }

      function CloseBox() {
          layer.close(layer.index);
      }

      function DoClose() {
          window.opener = null;
          window.close();
      }

      function LoadVideoInfo() {
          var resultID = $("#hfResultID").val();
          var url = "../Logic/Question.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 30,
                  Date: date,
                  resultID: resultID
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  var infoObj = data[0];

                  $("#txtVideoPath").val(infoObj.VideoPath);
                  $("#txtVideoLength").val(infoObj.VideoLength);

                  if (infoObj.PlayPath == "") {
                      $("#imgVideo").attr('src', "images/video.png");
                      $("#imgVideo").unbind("click");
                  }
                  else {
                      $("#imgVideo").unbind("click");
                      if (infoObj.PlayType == "2") {
                          $("#imgVideo").attr('src', "images/sound_lightup.png");
                          InitAudio(infoObj.PlayPath);
                          $("#imgVideo").bind("click", function () {
                              ShowAudioWindow();
                          });
                      }
                      else if (infoObj.PlayType == "3") {
                          $("#imgVideo").attr('src', "images/video_lightup.png");
                          InitVideo(infoObj.PlayPath, infoObj.CoverImage);
                          $("#imgVideo").bind("click", function () {
                              ShowVideoWindow();
                          });
                      }
                  }
              }
          });
      }

      function LoadInfo() {
          var resultID = $("#hfResultID").val();
          var url = "../Logic/Question.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 30,
                  Date: date,
                  resultID: resultID
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  var infoObj = data[0];
                  $("#txtVisitDate").val(infoObj.VisitDate);
                  $("#txtVisitBeginTime").val(infoObj.VisitBeginTime);
                  $("#txtVisitEndTime").val(infoObj.VisitEndTime);
                  $("#txtVideoPath").val(infoObj.VideoPath);
                  $("#txtVideoLength").val(infoObj.VideoLength);
                  $("#txtDescription").val(infoObj.Description);
                  //$("#lblScore").text(infoObj.Score);
                  $("#txtTimeLength").val(infoObj.TimeLength);
                  var periodID = "time_" + infoObj.TimePeriodID;
                  var weekNumID = "WeekNum_" + infoObj.WeekNum;
                  $("#" + periodID).prop("checked", true);
                  $("#" + weekNumID).prop("checked", true);

                  if (infoObj.PlayPath == "") {
                      $("#imgVideo").attr('src', "images/video.png");
                      $("#imgVideo").unbind("click");
                  }
                  else {
                      $("#imgVideo").unbind("click");
                      if (infoObj.PlayType == "2") {
                          $("#imgVideo").attr('src', "images/sound_lightup.png");
                          InitAudio(infoObj.PlayPath);
                          $("#imgVideo").bind("click", function () {
                              ShowAudioWindow();
                          });
                      }
                      else if (infoObj.PlayType == "3") {
                          $("#imgVideo").attr('src', "images/video_lightup.png");
                          InitVideo(infoObj.PlayPath, infoObj.CoverImage);
                          $("#imgVideo").bind("click", function () {
                              ShowVideoWindow();
                          });
                      }
                  }
              }
          });
      }


      function DoSubmitUpload() {
          $("#loadAudit").show();
          var resultID = $("#hfResultID").val();
          if (resultID == "" || resultID == "-1") {
              layer.alert("提交失败，请先保存问卷。");
              $("#loadAudit").hide();
              return false;
          }
          var auditType = $("#hfAuditType").val();
          var url = "../Logic/QuestionnaireAudit.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  type: 15,
                  Date: date,
                  resultID: resultID
              },
              dataType: "json",
              type: "POST",
              traditional: true,
              success: function (data) {
                  layer.alert("提交成功.", function (index) {
                      layer.closeAll();
                      DoClose();
                      $("#loadAudit").hide();
                  });
              },
              error: function (e) {
                  $("#loadAudit").hide();
              }
          });
      }

      function LoadQuestion() {
          var questionnaireID = $("#hfQuestionnaireID").val();
          var url = "../Logic/Question.ashx";
          var date = new Date();
          $.ajax({
              url: url,
              data: {
                  Type: 34,
                  Date: date,
                  questionnaireID: questionnaireID
              },
              dataType: "json",
              type: "GET",
              traditional: true,
              success: function (data) {
                  var bAutoTickCorrectOption = 1;
                  var jsonQuestions = data.Questions;
                  $("#parentPart").empty();
                  $.each(jsonQuestions, function (i, questionItem) {
                      if (questionItem.ParentCode == "" && questionItem.Code != "0") {
                          var parentStr = "<td>" + questionItem.Code + ":" + questionItem.Title + "</td>\
                          <td><input id=\"txtScore_" + questionItem.Code + "\" type=\"text\" autocomplete=\"off\" class=\"layui-input\" disabled value=\"" + toDecimal(ReplaceNULL(questionItem.TotalScore, ''), 1) + "\"/></td>";
                          $("#parentPart").append(parentStr);
                      }

                      var str = "";
                      var trID = "question_" + questionItem.ID;

                      var bHidden = questionItem.bHidden == "True" ? "none" : "table-row";
                      if (questionItem.QuestionType == "7") {
                          //章节
                          str += "<tr class=\"boldText\" style=\"display:" + bHidden + ";\">";
                          str += "<td colspan=\"6\" align=\"center\">" + questionItem.Code + " " + questionItem.Title + "(" + toDecimal(ReplaceNULL(questionItem.TotalScore, ''), 1) + "分)</td>";
                      }
                      else if (questionItem.QuestionType == "4") {
                          //填空题
                          var fullScore = questionItem.TotalScore;
                          var answerScore = fullScore;
                          if (questionItem.AnswerScore > 0) {
                              answerScore = questionItem.AnswerScore;
                          }
                          var negativeScore = fullScore - answerScore;
                          str += "<tr id=\"" + trID + "\" style=\"display:" + bHidden + ";\">";
                          str += "<td>" + questionItem.Code + " " + questionItem.Title + "</td>";
                          str += "<td><textarea name=\"inputAnswer\" id=\"" + questionItem.ID + "\" class=\"layui-textarea minitextarea\"></textarea></td>";
                          str += "<td>" + toDecimal(ReplaceNULL(fullScore, ''), 1) + "</td>";
                          str += "<td><input type=\"text\" name=\"txtPositiveScore\" class=\"layui-input\" disabled value=\"" + toDecimal(ReplaceNULL(answerScore, ''), 1) + "\" /></td>";
                          str += "<td><input type=\"text\" name=\"txtNegativeScore\" class=\"layui-input\" disabled value=\"" + toDecimal(ReplaceNULL(negativeScore, ''), 1) + "\" /></td>";
                          str += "<td>";
                          str += "<textarea name=\"txtQuestionDescription\" class=\"layui-textarea\"></textarea>";
                          str += "<input type=\"hidden\" name=\"hfQuestionType\" value=\"" + questionItem.QuestionType + "\">";
                          str += "<input type=\"hidden\" name=\"hfQuestionTitle\" value=\"" + questionItem.Code + " " + questionItem.Title + "\">";
                          str += "<input type=\"hidden\" name=\"hfCode\" value=\"" + questionItem.Code + "\">";
                          str += "<input type=\"hidden\" name=\"hfParentCode\" value=\"" + questionItem.ParentCode + "\">";
                          str += "<input type=\"hidden\" name=\"hfBHidden\" value=\"" + questionItem.bHidden + "\">";
                          str += "</td>";
                      }
                      else if (questionItem.QuestionType == "8") {
                          //上传题
                          str += "<tr id=\"" + trID + "\" style=\"display:" + bHidden + "\">";
                          str += "<td>" + questionItem.Code + " " + questionItem.Title + "</td>";
                          str += "<td>";
                          str += "<ul class=\"filelist\" id=\"filelist_" + questionItem.ID + "\">";
                          str += "</ul>";
                          str += "</td>";
                          str += "<td>" + toDecimal(ReplaceNULL(fullScore, ''), 1) + "</td>";
                          str += "<td><input type=\"text\" name=\"txtPositiveScore\" class=\"layui-input\" disabled value=\"" + toDecimal(ReplaceNULL(answerScore, ''), 1) + "\" /></td>";
                          str += "<td><input type=\"text\" name=\"txtNegativeScore\" class=\"layui-input\" disabled value=\"" + toDecimal(ReplaceNULL(negativeScore, ''), 1) + "\" /></td>";
                          str += "<td>";
                          str += "<textarea name=\"txtQuestionDescription\" class=\"layui-textarea\"></textarea>";
                          str += "<input type=\"hidden\" name=\"hfQuestionType\" value=\"" + questionItem.QuestionType + "\">";
                          str += "<input type=\"hidden\" name=\"hfQuestionTitle\" value=\"" + questionItem.Code + " " + questionItem.Title + "\">";
                          str += "<input type=\"hidden\" name=\"hfCode\" value=\"" + questionItem.Code + "\">";
                          str += "<input type=\"hidden\" name=\"hfParentCode\" value=\"" + questionItem.ParentCode + "\">";
                          str += "<input type=\"hidden\" name=\"hfBHidden\" value=\"" + questionItem.bHidden + "\">";
                          str += "</td>";
                      }
                      else 
                      {
                          str += "<tr id=\"" + trID + "\" style=\"display:" + bHidden + "\">";
                          str += "<td>" + questionItem.Code + " " + questionItem.Title + "</td>";
                          str += "<td>";
                          //加载题目选项
                          if (questionItem.Options != null && JSONLength(questionItem.Options) > 0) {
                              str += "<dl class=\"questionOne\">";
                              var options = questionItem.Options;
                              $.each(options, function (j, item) {
                                  var title = item.Title;
                                  var optionID = item.ID;
                                  var bAllowText = item.bAllowText == "True" ? "1" : "0";
                                  var bCorrectOption = item.bCorrectOption == "True" ? "1" : "0";
                                  str += "<dt style=\"padding-bottom: 5px;\" class=\"optionOne\">";
                                  var inputLabelType = "checkbox";
                                  var correctLabelType = "radio";
                                  if (questionItem.QuestionType == "1") {
                                      //是非题
                                      inputLabelType = "checkbox";
                                      correctLabelType = "radio";
                                  }
                                  else if (questionItem.QuestionType == "2") {
                                      //单选题
                                      inputLabelType = "radio";
                                      correctLabelType = "radio";
                                  }
                                  else if (questionItem.QuestionType == "3") {
                                      //多选题
                                      inputLabelType = "checkbox";
                                      correctLabelType = "checkbox";

                                      if (item.bOpposite == "True") {
                                          inputLabelType = "radio";
                                          correctLabelType = "radio";
                                      }
                                  }
                                  if (bAllowText == "1") {
                                      str += "<dl>";
                                      str += "<dt style=\"float:left;\">";
                                      str += "<input type=\"hidden\" name=\"hfOptionIsCorrect\" value=\"" + bCorrectOption + "\" />";
                                      str += "<input type=\"hidden\" name=\"hfOptionScore\" value=\"" + item.Score + "\" />";
                                      if (bCorrectOption == "1") {
                                          if (bAutoTickCorrectOption == 1) {
                                              str += "<input type=\"" + correctLabelType + "\" class=\"customcheckbox\" lay-ignore onchange=\"SelectedOptionChanged('" + questionItem.ID + "',this)\" id=\"" + optionID + "\" name=\"Answer_" + optionID + "\" value=\"" + optionID + "\" checked/><label class=\"copylabel\">" + title + "</label>";
                                          }
                                          else {
                                              str += "<input type=\"" + correctLabelType + "\" class=\"customcheckbox\" lay-ignore onchange=\"SelectedOptionChanged('" + questionItem.ID + "',this)\"  id=\"" + optionID + "\" name=\"Answer_" + optionID + "\" value=\"" + optionID + "\"/><label class=\"copylabel\">" + title + "</label>";
                                          }
                                      }
                                      else {
                                          str += "<input type=\"" + inputLabelType + "\" class=\"customcheckbox\" lay-ignore onchange=\"SelectedOptionChanged('" + questionItem.ID + "',this)\"  id=\"" + optionID + "\" name=\"Answer_" + optionID + "\" value=\"" + optionID + "\"/><label class=\"copylabel\">" + title + "</label>";
                                      }
                                      str += "</dt>";
                                      str += "<dt>";
                                      if (bCorrectOption == "1" && bAutoTickCorrectOption == 1) {
                                          str += "<input type=\"text\" style=\"width:300px;\" name=\"otherAnswer\" class=\"layui-input layui-input-small\" />";
                                      }
                                      else {
                                          str += "<input type=\"text\" style=\"width:300px;\" name=\"otherAnswer\" class=\"layui-input layui-input-small\" disabled/>";
                                      }
                                      str += "</dt>";
                                      str += "</dl>";
                                  }
                                  else {
                                      str += "<input type=\"hidden\" name=\"hfOptionIsCorrect\" value=\"" + bCorrectOption + "\" />";
                                      str += "<input type=\"hidden\" name=\"hfOptionScore\" value=\"" + item.Score + "\" />";
                                      if (bCorrectOption == "1") {
                                          if (bAutoTickCorrectOption == 1) {
                                              str += "<input type=\"" + correctLabelType + "\" class=\"customcheckbox\" lay-ignore onchange=\"SelectedOptionChanged('" + questionItem.ID + "',this)\" id=\"" + optionID + "\" name=\"Answer_" + optionID + "\" value=\"" + optionID + "\" checked/><label class=\"copylabel\">" + title + "</label><br/>";
                                          }
                                          else {
                                              str += "<input type=\"" + correctLabelType + "\" class=\"customcheckbox\" lay-ignore onchange=\"SelectedOptionChanged('" + questionItem.ID + "',this)\" id=\"" + optionID + "\" name=\"Answer_" + optionID + "\" value=\"" + optionID + "\"/><label class=\"copylabel\">" + title + "</label><br/>";
                                          }
                                      }
                                      else {
                                          str += "<input type=\"" + inputLabelType + "\" class=\"customcheckbox\" lay-ignore onchange=\"SelectedOptionChanged('" + questionItem.ID + "',this)\" id=\"" + optionID + "\" name=\"Answer_" + optionID + "\" value=\"" + optionID + "\"/><label class=\"copylabel\">" + title + "</label><br/>";
                                      }
                                  }
                                  str += "<input type=\"hidden\" name=\"hfOptionID\" value=\"" + optionID + "\" />";
                                  str += "<input type=\"hidden\" name=\"hfJumpQuestionCode\" value=\"" + item.JumpQuestionCode + "\" />";
                                  str += "<input type=\"hidden\" name=\"hfbOpposite\" value=\"" + item.bOpposite + "\" />";
                                  str += "<input type=\"hidden\" name=\"hfShowQuestionCode\" value=\"" + item.ShowQuestionCode + "\" />";
                                  str += "</dt>";
                              });
                              str += "</dl>";
                          }
                          str += "</td>";

                          var fullScore = questionItem.TotalScore;
                          str += "<td>" + toDecimal(ReplaceNULL(fullScore, ''), 1) + " <input type=\"hidden\" name=\"txtFullScore\" value=\"" + toDecimal(ReplaceNULL(fullScore, ''), 1) + "\"></td>";
                          str += "<td><input type=\"text\" name=\"txtPositiveScore\" class=\"layui-input\" disabled value=\"" + toDecimal(ReplaceNULL(fullScore, ''), 1) + "\"></td>";
                          str += "<td><input type=\"text\" name=\"txtNegativeScore\" class=\"layui-input\" disabled value=\"0\"></td>";

                          str += "<td>";
                          str += "<textarea name=\"txtQuestionDescription\" class=\"layui-textarea\"></textarea>";
                          str += "<input type=\"hidden\" name=\"hfQuestionType\" value=\"" + questionItem.QuestionType + "\">";
                          str += "<input type=\"hidden\" name=\"hfQuestionTitle\" value=\"" + questionItem.Code + " " + questionItem.Title + "\">";
                          str += "<input type=\"hidden\" name=\"hfCountType\" value=\"" + questionItem.CountType + "\">";
                          str += "<input type=\"hidden\" name=\"hfCode\" value=\"" + questionItem.Code + "\">";
                          str += "<input type=\"hidden\" name=\"hfParentCode\" value=\"" + questionItem.ParentCode + "\">";
                          str += "<input type=\"hidden\" name=\"hfBHidden\" value=\"" + questionItem.bHidden + "\">";
                          str += "</td>";

                      }

                      str += "<td name=\"auditTag\">";
                      str += "</td>"

                      if (questionItem.QuestionType != "7") {
                          str += "<td>";
                          //str += "<a href=\"javascript:void(0)\" class=\"Allmb_Opera\">上传</a>&nbsp;&nbsp;";
                          str += "</td>"
                      }
                      else 
                      {
                          str += "<td>";
                          str += "</td>"
                      }

                      str += "</tr>";

                      $("#questionlist").append(str);
                  });

                  layui.use('form', function () {
                      var form = layui.form;
                      form.render();
                  });
              },
              error: function () {
              }
          });
      }

//      function OptionTextChanged(questionID, optionID, textObj) {
//          //不再即时保存
//          return false;
//          var optionText = $(textObj).val();
//          var resultID = $("#hfResultID").val();
//          var url = "../Logic/QuestionAnswer.ashx";
//          var date = new Date();
//          $.ajax({
//              url: url,
//              data: {
//                  type: 3,
//                  Date: date,
//                  resultID: resultID,
//                  questionID: questionID,
//                  optionID: optionID,
//                  optionText: optionText
//              },
//              dataType: "json",
//              type: "POST",
//              traditional: true,
//              success: function (data) {

//              }
//          });
//      }

      function SelectedOptionChangeEvent(optionObj) {
          var curID = $(optionObj).val();
          var questionType = $(optionObj).closest("tr").find("input[name='hfQuestionType']").val();
          if (questionType == "1" || questionType == "2") {
                //是非题和单选题
              $(optionObj).closest(".optionOne").find("input[type='text']").attr("disabled", false);
          }
          if ($(optionObj).attr("type") == "radio") {
              if (questionType == "1" || questionType == "2") {
                  $(optionObj).closest(".questionOne").find("input[type='checkbox']").prop("checked", false);
                  $(optionObj).closest(".questionOne").find("input[type='checkbox']").closest(".optionOne").find("input[type='text']").attr("disabled", true);
                  $(optionObj).closest(".questionOne").find("input[type='checkbox']").closest(".optionOne").find("input[type='text']").val("");
              }
                $(optionObj).closest(".questionOne").find("input[type='radio']").each(function (i, item) {
                    var id = $(item).val();
                    if (id != curID) {
                        $(item).prop("checked", false);
                        $(item).closest(".optionOne").find("input[type='text']").attr("disabled", true);
                        $(item).closest(".optionOne").find("input[type='text']").val("");
                    }
                });
              
          }
          else {
              
              if (questionType == "1") {
                //是非题中的非选项
                  $(optionObj).closest(".questionOne").find("input[type='radio']").prop("checked", false);
                  $(optionObj).closest(".questionOne").find("input[type='radio']").closest(".optionOne").find("input[type='text']").attr("disabled", true);
                  $(optionObj).closest(".questionOne").find("input[type='radio']").closest(".optionOne").find("input[type='text']").val("");

                  if ($(optionObj).prop("checked") == false) {
                      $(optionObj).closest(".optionOne").find("input[type='text']").attr("disabled", true);
                      $(optionObj).closest(".optionOne").find("input[type='text']").val("");
                      var checkedCount = $(optionObj).closest(".questionOne").find(":checkbox:checked").length;
                      if (checkedCount <= 0) {
                          $(optionObj).closest(".questionOne").find("input[type='radio']").prop("checked", true);
                          $(optionObj).closest(".questionOne").find("input[type='radio']").closest(".optionOne").find("input[type='text']").attr("disabled", false);
                      }
                  } 
              }
              //检测是否是互斥选项
//              var hasBOpposite = $(optionObj).closest(".optionOne").find("input[name='hfbOpposite']").val();
//              if (hasBOpposite == "1") {
//                  $(optionObj).closest(".questionOne").find("input[name='hfbOpposite']").closest(".optionOne").each(function (i, item) {
//                      var id = $(item).find("input[type='checkbox']").val();

//                  });
//              }              
          }

          RefreshJumpQuestion(optionObj);
      }

      function RefreshJumpQuestion(optionObj) {
          var curID = $(optionObj).val();
          var curType = $(optionObj).attr("type");
          var curCheck = $(optionObj).prop("checked");
          var questionType = $(optionObj).closest("tr").find("input[name='hfQuestionType']").val();
          if (questionType == "1" || questionType == "2" || (questionType == "3" && curType == "radio")) 
          {
              $(optionObj).closest(".questionOne").find("input[type='radio']").each(function (i, item) {
                  var jumpCode = $(item).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                  var showCode = $(item).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                  if (jumpCode != "" && jumpCode != undefined) {
                      jumpCode = jumpCode.replace('，', ',');
                      var codelist = jumpCode.split(',');
                      var id = $(item).val();
                      if (id != curID) {
                          //该题目的其他选项的跳过必须重新显示出来
                          $.each(codelist, function (i, code) {
                              SetQuestionStatusByJumpCode(code, true);
                          });
                      }
                  }
                  if (showCode != "" && showCode != undefined) {
                      showCode = showCode.replace('，', ',');
                      var codelist = showCode.split(',');
                      var id = $(item).val();
                      if (id != curID) {
                          //该题目的其他选项的显示必须重新隐藏出来
                          $.each(codelist, function (i, code) {
                              SetQuestionStatusByJumpCode(code, false);
                          });
                      }
                  }
              });
              $(optionObj).closest(".questionOne").find("input[type='radio']").each(function (i, item) {
                  var jumpCode = $(item).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                  var showCode = $(item).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                  if (jumpCode != "" && jumpCode != undefined) {
                      jumpCode = jumpCode.replace('，', ',');
                      var codelist = jumpCode.split(',');
                      var id = $(item).val();
                      if (id == curID) {
                          //该题目的当前选项的跳过必须生效
                          $.each(codelist, function (i, code) {
                              SetQuestionStatusByJumpCode(code, false);
                          });
                      } 
                  }
                  if (showCode != "" && showCode != undefined) {
                      showCode = showCode.replace('，', ',');
                      var codelist = showCode.split(',');
                      var id = $(item).val();
                      if (id == curID) {
                          //该题目的当前选项的显示必须生效
                          $.each(codelist, function (i, code) {
                              SetQuestionStatusByJumpCode(code, true);
                          });
                      }
                  }
              });
          }
          if (curType == "radio") {
              //radio
              $(optionObj).closest(".questionOne").find("input[type='checkbox']").each(function (i, item) {
                  var jumpCode = $(item).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                  var showCode = $(item).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                  if (jumpCode != "" && jumpCode != undefined) {
                      jumpCode = jumpCode.replace('，', ',');
                      var codelist = jumpCode.split(',');
                      //该题目的其他选项的跳过必须重新显示出来
                      $.each(codelist, function (i, code) {
                          SetQuestionStatusByJumpCode(code, true);
                      });
                  }
                  if (showCode != "" && showCode != undefined) {
                      showCode = showCode.replace('，', ',');
                      var codelist = showCode.split(',');
                      //该题目的其他多选选项的必须重新隐藏出来
                      $.each(codelist, function (i, code) {
                          SetQuestionStatusByJumpCode(code, false);
                      });
                  }
              });
          }
          else if (curType == "checkbox") {
              //checkbox
              if (questionType == "1" || questionType == "3") {
                  if (curCheck == true) {
                      var jumpCode = $(optionObj).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                      var showCode = $(optionObj).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                      if (jumpCode != "" && jumpCode != undefined) {
                          jumpCode = jumpCode.replace('，', ',');
                          var codelist = jumpCode.split(',');
                          if (curCheck == true) {
                              //该题目的当前选项的跳过必须生效
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, false);
                              });
                          }
                          else {
                              //该题目的当前选项的跳过必须重新显示出来
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, true);
                              });
                          }
                      }
                      if (showCode != "" && showCode != undefined) {
                          showCode = showCode.replace('，', ',');
                          var codelist = showCode.split(',');
                          if (curCheck == true) {
                              //该题目的当前选项的跳过必须生效
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, true);
                              });
                          }
                          else {
                              //该题目的当前选项的跳过必须重新显示出来
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, false);
                              });
                          }
                      }
                  }
                  else {
                      //存在情况：所有checkbox都不勾选，则radio会被自动勾选上
                      var checkedCount = $(optionObj).closest(".questionOne").find(":checkbox:checked").length;
                      if (checkedCount <= 0) {
                          var jumpCode = $(optionObj).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                          var showCode = $(optionObj).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                          if (jumpCode != "" && jumpCode != undefined) {
                              jumpCode = jumpCode.replace('，', ',');
                              var codelist = jumpCode.split(',');
                              //该选项的跳过必须重新显示出来
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, true);
                              });
                          }
                          if (showCode != "" && showCode != undefined) {
                              showCode = showCode.replace('，', ',');
                              var codelist = showCode.split(',');
                              //该选项的显示必须重新隐藏出来
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, false);
                              });
                          }

                          //此情况，需要将radio的JumpCode生效
                          var jumpCode = $(optionObj).closest(".questionOne").find("input[type='radio']").closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                          var showCode = $(optionObj).closest(".questionOne").find("input[type='radio']").closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                          if (jumpCode != "" && jumpCode != undefined) {
                              jumpCode = jumpCode.replace('，', ',');
                              var codelist = jumpCode.split(',');
                              //该题目的其他选项的跳过必须重新显示出来
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, false);
                              });
                          }
                          if (showCode != "" && showCode != undefined) {
                              showCode = showCode.replace('，', ',');
                              var codelist = showCode.split(',');
                              //该题目的其他选项的跳过必须重新显示出来
                              $.each(codelist, function (i, code) {
                                  SetQuestionStatusByJumpCode(code, true);
                              });
                          }
                      }
                      else {
                          var jumpCode = $(optionObj).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                          var showCode = $(optionObj).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                          if (jumpCode != "" && jumpCode != undefined) {
                              jumpCode = jumpCode.replace('，', ',');
                              var codelist = jumpCode.split(',');
                              //该选项的跳过必须重新显示出来
                              $.each(codelist, function (i, code) {
                                  var hasSameCode = false;

                                  $(optionObj).closest(".questionOne").find(":checkbox:checked").each(function (i, item) {
                                      var jumpCode_Checked = $(item).closest(".optionOne").find("input[name='hfJumpQuestionCode']").val();
                                      if (jumpCode_Checked != "" && jumpCode_Checked != undefined) {
                                          jumpCode_Checked = jumpCode_Checked.replace('，', ',');
                                          var codelist_Checked = jumpCode_Checked.split(',');
                                          $.each(codelist_Checked, function (i, code_checked) {
                                              if (code == code_checked) {
                                                  hasSameCode = true;
                                                  return false;
                                              }
                                          });
                                      }
                                  });

                                  if (hasSameCode == false) {
                                      SetQuestionStatusByJumpCode(code, true);
                                  }
                              });
                          }
                          if (showCode != "" && showCode != undefined) {
                              showCode = showCode.replace('，', ',');
                              var codelist = showCode.split(',');
                              //该选项的显示必须重新隐藏出来
                              $.each(codelist, function (i, code) {

                                  var hasSameCode = false;

                                  $(optionObj).closest(".questionOne").find(":checkbox:checked").each(function (i, item) {
                                      var showCode_Checked = $(item).closest(".optionOne").find("input[name='hfShowQuestionCode']").val();
                                      if (showCode_Checked != "" && showCode_Checked != undefined) {
                                          showCode_Checked = showCode_Checked.replace('，', ',');
                                          var codelist_Checked = showCode_Checked.split(',');
                                          $.each(codelist_Checked, function (i, code_checked) {
                                              if (code == code_checked) {
                                                  hasSameCode = true;
                                                  return false;
                                              }
                                          });
                                      }
                                  });

                                  if (hasSameCode == false) {
                                      SetQuestionStatusByJumpCode(code, false);
                                  }
                              });
                          }
                      }
                  }
              }
          }
      }

      function SetQuestionStatusByJumpCode(code, show) {
          $("#questionlist").find("input[name='hfCode']").each(function (j, codeItem) {
              if ($(codeItem).val() == code) {
                  var questionType = $(codeItem).closest("tr").find("input[name='hfQuestionType']").val();
                  var parentCode = $(codeItem).closest("tr").find("input[name='hfParentCode']").val();
                  if (questionType == "7" && parentCode == "") {
                      //大章节不隐藏
                      return false;
                  }
                  if (show == true) {
                      $(codeItem).closest("tr").css("display","table-row");
                      $(codeItem).closest("tr").find("input:checked").each(function (i, optionObj) {
                          RefreshJumpQuestion(optionObj);
                      });
                  }
                  else {
                      $(codeItem).closest("tr").css("display", "none");
                      $(codeItem).closest("tr").find("input[name='hfShowQuestionCode']").each(function (i, showitem) {
                          var showCode = $(showitem).val();
                          if (showCode != "" && showCode != undefined) {
                              showCode = showCode.replace('，', ',');
                              var codelist = showCode.split(',');
                              $.each(codelist, function (i, c) {
                                  SetQuestionStatusByJumpCode(c, false);
                              });
                          }

                      });
                      SetQuestionChangeImpact(codeItem);
                  }
                 
              }
          });

          $("#questionlist").find("input[name='hfParentCode']").each(function (j, codeItem) {
              if ($(codeItem).val() == code) {
                  if (show == true) {
                      //如果子题目默认是隐藏的，则不跟随父题目显示出来
                      if ($(codeItem).closest("tr").find("input[name='hfBHidden']").val() != "True") {
                          $(codeItem).closest("tr").css("display", "table-row");
                          $(codeItem).closest("tr").find("input:checked").each(function (i, optionObj) {
                              RefreshJumpQuestion(optionObj);
                          });
                      }
                  }
                  else {
                      $(codeItem).closest("tr").css("display", "none");
                      $(codeItem).closest("tr").find("input[name='hfShowQuestionCode']").each(function (i, showitem) {
                          var showCode = $(showitem).val();
                          if (showCode != "" && showCode != undefined) {
                              showCode = showCode.replace('，', ',');
                              var codelist = showCode.split(',');
                              $.each(codelist, function (i, c) {
                                  SetQuestionStatusByJumpCode(c, false);
                              });
                          }

                      });
                      SetQuestionChangeImpact(codeItem);
                  }
                  //如果子题目默认是隐藏的，则不跟随父题目显示出来
                  if ($(codeItem).closest("tr").find("input[name='hfBHidden']").val() != "True") {
                      var currentCode = $(codeItem).parent().find("input[name='hfCode']").val();
                      SetQuestionStatusByJumpCode(currentCode, show);
                  }
              }
          });
      }

      function SetQuestionChangeImpact(codeItem) {
          //加载默认值,恢复成默认答案，并且恢复得分
          $(codeItem).closest("tr").find("textarea").val("");
          $(codeItem).closest("tr").find(".questionOne input[type='text']").val("");
          $(codeItem).closest("tr").find(".questionOne input[type='text']").attr("disabled", true);
          var questionType = $(codeItem).closest("tr").find("input[name='hfQuestionType']").val();
          if (questionType == "1") {
              $(codeItem).closest("tr").find("input[type='radio']").prop("checked", true);
              $(codeItem).closest("tr").find("input[type='radio']").closest(".optionOne").find("input[type='text']").attr("disabled", false);
              $(codeItem).closest("tr").find("input[type='checkbox']").prop("checked", false);
          }
          else {
              $(codeItem).closest("tr").find("input[type='radio']").prop("checked", false);
              $(codeItem).closest("tr").find("input[type='checkbox']").prop("checked", false);
          }
          var fullscore = $(codeItem).closest("tr").find("input[name='txtFullScore']").val();
          var oldScore = $(codeItem).closest("tr").find("input[name='txtPositiveScore']").val();
          fullscore = parseFloat(fullscore);
          oldScore = parseFloat(oldScore);

          $(codeItem).closest("tr").find("input[name='txtPositiveScore']").val(fullscore);
          $(codeItem).closest("tr").find("input[name='txtNegativeScore']").val("0");

          var totalScore = $("#lblScore").text();
          totalScore = parseFloat(totalScore);
          totalScore = totalScore - oldScore + fullscore;
          $("#lblScore").text(toDecimal(totalScore));

          var parentCode = $(codeItem).closest("tr").find("input[name='hfParentCode']").val();
          $("#parentPart").find("input").each(function (i, item) {
              var partID = $(item).attr("id");
              partID = partID.replace("txtScore_", "");
              if (parentCode.indexOf(partID) >= 0) {
                  var currentScore = $(item).val();
                  currentScore = parseFloat(currentScore);
                  currentScore = currentScore - oldScore + fullscore;
                  $(item).val(toDecimal(currentScore));
                  return false;
              }
          });
      }

      function SelectedOptionChanged(questionID, optionObj) {
          SelectedOptionChangeEvent(optionObj);
          SelectedOptionChangeSave(questionID, optionObj);
      }

      function SelectedOptionChangeSave(questionID, optionObj) {
          var selectOptions = [];
          var correctOptions = [];
          var countType = $(optionObj).closest("tr").find("input[name='hfCountType']").val();
          var fullScore = $(optionObj).closest("tr").find("input[name='txtFullScore']").val();
          $(optionObj).closest(".questionOne").find(".customcheckbox").each(function (i, eachOption) {
              var selectOptionID = $(eachOption).val();
              var optionIsCorrect = $(eachOption).closest(".optionOne").find("input[name='hfOptionIsCorrect']").val();
              var optionScore = $(eachOption).closest(".optionOne").find("input[name='hfOptionScore']").val();
              optionScore = parseFloat(optionScore);
              if ($(eachOption).prop("checked") == true) {
                  var optionDO = {};
                  optionDO.ID = selectOptionID;
                  optionDO.BCorrectOption = optionIsCorrect == "1" ? true : false;
                  optionDO.Score = optionScore;
                  selectOptions.push(optionDO);
              }

              if (optionIsCorrect == "1") {
                  correctOptions.push(selectOptionID);
              }
          });
          fullScore = parseFloat(fullScore);
          var score = CalculateQuestionScore(countType, fullScore, selectOptions, correctOptions);
          var oldScore = $(optionObj).closest("tr").find("input[name='txtPositiveScore']").val();
          oldScore = parseFloat(oldScore);
          var wrongScore = fullScore - score;
          //countType=2 错误扣分计分
          if (countType == 2) {
              if (score == 0) {
                  score = 0;
                  wrongScore = 0;
              }
              else {
                  score = 0;
                  wrongScore = fullScore;
              }
              var oldNegativeScore = $(optionObj).closest("tr").find("input[name='txtNegativeScore']").val();
              oldScore = -1 * parseFloat(oldNegativeScore);
          }

          $(optionObj).closest("tr").find("input[name='txtPositiveScore']").val(toDecimal(score));
          $(optionObj).closest("tr").find("input[name='txtNegativeScore']").val(toDecimal(wrongScore));

          var totalScore = $("#lblScore").text();
          totalScore = parseFloat(totalScore);
          totalScore = totalScore - oldScore + score;
          $("#lblScore").text(toDecimal(totalScore));


          var parentCode = $(optionObj).closest("tr").find("input[name='hfParentCode']").val();
          $("#parentPart").find("input").each(function (i, item) {
              var partID = $(item).attr("id");
              partID = partID.replace("txtScore_", "");
              if (parentCode.indexOf(partID) >= 0) {
                  var currentScore = $(item).val();
                  currentScore = parseFloat(currentScore);
                  currentScore = currentScore - oldScore + score;
                  $(item).val(toDecimal(currentScore));
                  return false;
              }
          });
      }

      function ShowAuditWindow() {
          layui.use('form', function () {
              var form = layui.form;
              $("#cbxApprove").prop("checked", true);
              $("#cbxReject").prop("checked", false);
              AuditUpdateOnCheck(form);
              $("#ddlReturnUserType").val("");
              $("#txtAuditNote").val("");
              form.render("radio");
          });

          layer.open({
              type: 1,
              title: "审核操作",
              area: ["500px", "330px"],
              content: $('#auditNote') //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
          });
      }

      function ShowSpecialImages() {
            var clientID = $("#hfClientID").val();
            var url = "../Logic/Upload.ashx";
            var date = new Date();
            $.ajax({
                url: url,
                data: {
                    type: 25,
                    Date: date,
                    clientID: clientID
                },
                dataType: "json",
                type: "GET",
                traditional: true,
                success: function (data) {
                    var urlObj = document.getElementById("filelist_more");
                    var str = "";
                    $(urlObj).empty();
                    $.each(data, function (i, item) {
                        var pictitle = item.Name;
                        var picurl = item.Url;
                        str += "<li><img data-original='" + picurl + "' src='" + picurl + "' alt='" + pictitle + "'/></li>";
                    });
                    $(urlObj).append(str);

                    var viewer_pageMore = new Viewer(urlObj, {
                        url: 'data-original',
                        viewed: function () {
                            $(".viewer-container").unbind("click");
                            $(".viewer-container").bind("click", function (evt) {
                                var e = evt || window.event;
                                var curobj = e.srcElement ? e.srcElement : e.target;
                                if (curobj.tagName == "IMG" || curobj.tagName == "LI") {
                                    return;
                                }
                                viewer_pageMore.hide();
                            });
                        }
                    });

                    //自定页
                    //边缘弹出
                    layer.open({
                        type: 1
              , title: '更多图片'
              , offset: 'lb' //具体配置参考：offset参数项
              , content: $('#moreImages')
              , area: ['500px', '400px']
              , shade: 0 //不显示遮罩
              , end: function () {
                  if (viewer_pageMore != null && viewer_pageMore != undefined) {
                      viewer_pageMore.destroy();
                  }
              }
                    });
                }
            });
            
      }

  </script>

  <style type="text/css">
  .webuploader-pick {
	position: relative;
	display: inline-block;
	cursor: pointer;
	background: #00b7ee;
	padding: 5px 15px;
	color: #fff;
	text-align: center;
	border-radius: 3px;
	overflow: hidden;
	font-size:12px;
}

.float
{
    width:600px;
    height:350px;
    z-index:1001;
    background-color: #ffffff;
}
.floatAudio
{
    z-index:1001;
    background-color: #ffffff;
    padding-left:20px;
}
  </style>

<link href="css/video-js.css" rel="stylesheet"/>	

</head>
<body style="overflow:hidden;">
<!--母版页-->
<div id="CommonTop"></div>
<script type="text/javascript">
    $(function () {
        $("#CommonTop").load("CommonTop.htm?s=" + (new Date()).toLocaleTimeString());
        $("#CommonProjectTop").load("CommonProjectTopFull.htm");
    });
</script>
<!--右侧-->
<div class="layui-tab layui-tab-brief" lay-filter="demoTitle">
    <div id="CommonProjectTop"></div> 
    <div class="layui-body layui-tab-content crightMainLeft">
    	<div class="crightMainTitle">
    		<span>审核问卷</span>
    	</div>
        <div style="padding: 10px 0px 0px 0px;border: 0;">
        <blockquote class="layui-elem-quote layui-quote-nm boldText">
            <div class="fr">当前状态：&nbsp;<label id="lblStatusName">未录入</label></div>
            执行问卷：&nbsp;<label class="lightText" id="lblQuestionnaireName"></label>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            执行期次：&nbsp;<label class="lightText" id="lblPeriod"></label>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            标准分值：&nbsp;<label class="lightText" id="lblFullScore">-</label>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            实际得分：&nbsp;<label class="lightText" id="lblScore">-</label>
        </blockquote>
        <blockquote class="layui-elem-quote layui-quote-nm boldText allhide" id="divAuditInfo">
            审核信息：&nbsp;<label class="lightText" id="lblAuditNote"></label>
            &nbsp;&nbsp;&nbsp;
            <a class="Allmb_Opera" href="javascript:void(0)" onclick="ShowAuditHistory();">查看所有</a>
            &nbsp;&nbsp;
            <a class="Allmb_Opera" href="javascript:void(0)" onclick="ShowSpecialImages();">查看对比图片</a>
            &nbsp;&nbsp;
            <a class="Allmb_Opera" href="javascript:void(0)" onclick="ShowSpecialImages();">查看分公司申诉</a>
            &nbsp;&nbsp;
            <a class="Allmb_Opera" href="javascript:void(0)" onclick="ShowSpecialImages();">查看机构申诉</a>
            <div id="auditInfo" class="allhide">
            </div>
        </blockquote>
        </div>
    	<div class="Allmb_table">
    		<table class="layui-table" lay-even="">
			  <colgroup>
			    <col width="5%">
                <col width="15%">
                <col width="5%">
			    <col width="15%">
                <col width="5%">
			    <col width="15%">
                <col width="5%">
			    <col width="15%">
                <col width="13%">
			    <col width="7%">
			  </colgroup>
			  <thead>
			    <tr>
			      <th colspan="10">基础信息</th>
			    </tr> 
			  </thead>
			  <tbody>
			    <tr>
			      <td>
                    <label class="fl">网点编号：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                        <input id="txtClientCode" type="text" disabled autocomplete="off" class="layui-input customtextinput" />
                    </div>
                  </td>
                  <td>
                    <label class="fl">网点名称：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                        <input id="txtClientName" type="text" disabled autocomplete="off" class="layui-input customtextinput" />
                    </div>
                  </td>
                  <td>
                    <label class="fl">网点地址：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                        <input id="txtClientAddress" type="text" disabled autocomplete="off" class="layui-input customtextinput" />
                    </div>
                  </td>
                  <td>
                    <label class="fl">上级单位：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                        <input id="txtParentClientName" type="text" disabled autocomplete="off" class="layui-input customtextinput" />
                    </div>
                  </td>
                  <td rowspan="3" valign="top">
                        <label>时间段：</label>
                        <ul id="ddlTimePeriodList">
                        </ul>
                   </td> 
                   <td rowspan="3" valign="top">
                        <label style=" vertical-align: top;">星期：</label>
                        <ul id="ddlWeekNumList">
                            <li><input type="radio" name="week" value="1" id="WeekNum_1" class="customcheckbox"/><label for="WeekNum_1">星期一</label></li>
                            <li><input type="radio" name="week" value="2" id="WeekNum_2" class="customcheckbox"/><label for="WeekNum_2">星期二</label></li>
                            <li><input type="radio" name="week" value="3" id="WeekNum_3" class="customcheckbox"/><label for="WeekNum_3">星期三</label></li>
                            <li><input type="radio" name="week" value="4" id="WeekNum_4" class="customcheckbox"/><label for="WeekNum_4">星期四</label></li>
                            <li><input type="radio" name="week" value="5" id="WeekNum_5" class="customcheckbox"/><label for="WeekNum_5">星期五</label></li>
                            <li><input type="radio" name="week" value="6" id="WeekNum_6" class="customcheckbox"/><label for="WeekNum_6">星期六</label></li>
                            <li><input type="radio" name="week" value="0" id="WeekNum_0" class="customcheckbox"/><label for="WeekNum_0">星期天</label></li>
                        </ul>
                   </td>
			    </tr>
                <tr>
                  <td>
                    <label class="fl">访问日期：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                        <input id="txtVisitDate" type="text" autocomplete="off" class="layui-input customtextinput" />
                        <div class="InputDateIncoUpload">
                            <img src="images/InputDateInco.png" id="dateicon" />
                        </div>
                    </div>
                    <span class="requiredFields">*</span>
                  </td>
                  <td>
                    <label class="fl">进入时间：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                            <input id="txtVisitBeginTime" type="text" autocomplete="off" class="layui-input customtextinput" />
                            <div class="InputDateIncoUpload">
                                <img src="images/InputDateInco.png" id="fromicon" />
                            </div>
                        </div>
                        <span class="requiredFields">*</span>
                    </td>
                    <td>
                        <label class="fl">离开时间：</label>
                    </td>
                    <td>
                        <div class="layui-input-inline">
                            <input id="txtVisitEndTime" type="text" autocomplete="off" class="layui-input customtextinput" />
                            <div class="InputDateIncoUpload">
                                <img src="images/InputDateInco.png" id="toicon" />
                            </div>
                        </div>
                        <span class="requiredFields">*</span>
                    </td>
                    <td>
                        <label class="fl">时长(分钟)：</label>
                    </td>
                    <td>
                        <div class="layui-input-inline">
                            <input id="txtTimeLength" type="text" autocomplete="off" class="layui-input customtextinput" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                    <label class="fl">访问员：</label>
                  </td>
                  <td>
                    <div class="layui-input-inline">
                        <input id="txtVisitUserName" type="text" disabled autocomplete="off" class="layui-input customtextinput" />
                    </div>
                  </td>
                    <td>
                        <label class="fl">全程录像：</label>
                    </td>
                    <td>
                        <div class="layui-input-inline">
                            <input type="text" autocomplete="off" placeholder="录像地址" class="layui-input customtextinput" id="txtVideoPath" />
                            <div class="InputDateIncoUpload">
                                <img id="imgVideo" src="images/video.png" alt="点击播放" style="cursor:pointer;" />
                            </div>
                            
                        </div>
                    </td>
                    <td>
                        <label class="fl">录像时长：</label>
                    </td>
                    <td>
                        <div class="layui-inline Enter_input clearfix">
                            
                            <div class="Input_Date fl" style="position: relative; padding-left:5px;">
                                <input class="layui-input customtextinput" style="margin-top: 5px; width:100px;" value="00:00:00" id="txtVideoLength" />
                                <div class="InputDateInco">
                                    <img src="images/number.png" width="19px" height="17px" />
                                </div>
                            </div>
                            <div class="fl" style="margin-left:15px;margin-top:5px;">
                                <div id="filePicker">上传录像</div>							
                            </div>
                        </div>
                    </td>
                    <td>备 注</td>
                    <td>
                        <div class="layui-input-inline">
                            <input id="txtDescription" class="layui-input customtextinput"/>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="10" style="padding:0px;">
                        <table>
                            <tr id="parentPart">
                            </tr>
                        </table>
                    </td>
                </tr>
			  </tbody>
			</table>
            <form class="layui-form" action="">
                <table class="layui-table" lay-even="">
			      <colgroup>
			        <col width="30%">
			        <col width="30%">
                    <col width="7%">
                    <col width="7%">
                    <col width="7%">
			        <col width="9%">
                    <col width="7%">
                    <col width="3%">
			      </colgroup>
			      <thead>
			        <tr>
			          <th>正文信息</th>
                      <th>答题区</th>
			          <th>分值</th>
                      <th>得分</th>
                      <th>扣分</th>
                      <th>扣分描述</th>
                      <th>审核信息</th>
                      <th></th>
			        </tr> 
			      </thead>
			      <tbody id="questionlist">
                
			      </tbody>
			    </table> 
            </form>
    	</div>
    	<div class="TextCenter mt20 mb20">
            <button class="layui-btn aq-btn-pre" id="btnClose">关 闭</button>
            <button class="layui-btn aq-btn-next" id="btnSubmitUpload">保存问卷</button>
            <button class="layui-btn aq-btn-next" id="btnSubmitAudit">提交审核</button>
            <button class="layui-btn aq-btn-next" id="btnDelete">删除问卷</button>

            <input type="hidden" id="hfResultID" />
            <input type="hidden" id="hfDeliveryID" />
            <input type="hidden" id="hfClientID" />
            <input type="hidden" id="hfQuestionnaireID" />
            <input type="hidden" id="hfStatus" />

            <input type="hidden" id="hfAuditType" />
            <input type="hidden" id="hfCurrentUserType" />
            <input type="hidden" id="hfBHasAreaUser" />
            <input type="hidden" id="hfBAutoRefreshPage" />
		</div>
   	</div>
</div>

<div class="LoadingBg" id="loadProgress" style="display:none">
	<div class="LoadingMain">
    	<img src="images/loading.gif" alt=""/><span id="txtUploadProgress">-</span>
    </div>
</div>
<div class="LoadingBg" id="loadAnswer" style="display:none">
	<div class="LoadingMain">
    	<img src="images/loading.gif" alt=""/>正在保存问卷，请您耐心等候
    </div>
</div>
<div class="LoadingBg" id="loadPanel" style="display:none">
	<div class="LoadingMain">
    	<img src="images/loading.gif" alt=""/>正在保存默认正确选项，请您耐心等候（首次加载可能需要较长时间）
    </div>
</div>
<div class="LoadingBg" id="loadAudit" style="display:none">
	<div class="LoadingMain">
    	<img src="images/loading.gif" alt=""/>正在提交审核，请您耐心等候
    </div>
</div>

<div class="float allhide" id="floatDiv">
	<video id="my-video" class="video-js vjs-default-skin vjs-big-play-centered" 
        controls="true" preload="auto" width="600" height="350" data-setup="{}">
	</video>
</div>

<div class="floatAudio allhide" id="floatAudio">
	 <audio id="my-audio" src="" preload="auto" />
</div>


<div id="auditNote" class="allhide mt10">
<form class="layui-form paddingright30px" action="" onsubmit="return false;">
  <div class="layui-form-item">
    <label class="layui-form-label">审核结果：</label>
    <div class="layui-input-block">
      <input type="radio" name="audit" value="1" title="通过" checked="" id="cbxApprove" lay-filter="cbxApprove"/>
      <input type="radio" name="audit" value="2" title="不通过" id="cbxReject" lay-filter="cbxReject"/>
    </div>
  </div>
  <div class="layui-form-item layui-form-text allhide" id="returnUser">
    <label class="layui-form-label"><span class="requiredFields">*</span> 退回对象：</label>
    <div class="layui-input-block">
      <select class="LaddSelect" id="ddlReturnUserType">
		<option value="">请选择</option>  
	  </select>
    </div>
  </div>
  <div class="layui-form-item layui-form-text">
    <label class="layui-form-label">审核批注：</label>
    <div class="layui-input-block">
      <textarea id="txtAuditNote" class="layui-textarea"></textarea>
    </div>
  </div>
</form>

<div class="TextCenter mt20 mb10">
    <button class="layui-btn layui-btn-small aq-btn-pre" id="btnCancelAudit">取 消</button>
    <button class="layui-btn layui-btn-small aq-btn-next" id="btnAudit">确 定</button> 
</div>
</div>


<div id="auditNoteHistory" class="allhide">
    <table class="layui-table" lay-even="">
	    <colgroup>
	    <col width="150">
        <col width="150">
	    <col width="300">
	    <col width="150">
	    </colgroup>
	    <thead>
	    <tr>
		    <th>提交人</th>
		    <th>提交结果</th>
            <th>提交批注</th>
            <th>提交时间</th>
	    </tr>
	    </thead>
	    <tbody id="auditHistory">
	    </tbody>
    </table> 
    <div class="TextCenter mt20 mb10">
        <button class="layui-btn layui-btn-small aq-btn-pre" onclick="btnCancelAppeal()">关 闭</button>
    </div>
</div>

<div id="moreImages" class="allhide">
    <ul class="filelist" id="filelist_more">
    </ul>
</div>
</body>
</html>
